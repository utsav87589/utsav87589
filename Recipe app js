//from there to line number 13 we had start targeting the html elements for various purposes

const mealsEl = document.getElementById('meals');

const favoriteContainer = document.getElementById('fav-meals');

const searchTerm = document.getElementById('search-term');
const searchBtn = document.getElementById('search');

const mealPopup = document.getElementById('meal-popup');
const popupCloseBtn = document.getElementById('close-popup');

const mealInfoEl = document.getElementById('meal-info');

//functions are called there beacuse in the beginning we want to have some random meals and fav meals
getRandomMeal();
fetchFavMeals();

//function to show random meal 
async function getRandomMeal(){
    //async returns a promise i.e it will definately return something, await and fetch are used to gather the information and wait the js till our promise is setlled and result is ready
    const resp = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');

    //it is used to return a promise i.e it is storing data we are gathering and maing it ready to transport
    const respData = await resp.json();

    //we are preparing the data to show on the table
    const randomMeal = respData.meals[0]

    // we are giving the option to add meals also.
    addMeal(randomMeal, true);
}

async function getMealById(id){
    const resp = await fetch('https://www.themealdb.com/api/json/v1/1/lookup.php?i='+id);


    const respData = await resp.json();
    const meal = respData.meals[0];

    return meal;
}

async function getMealsBySearch(term){
    const resp = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s='+term);

    const respData = await resp.json();
    const meals = respData.meals;

    console.log(meals);
    return meals;
}
// there we are taking meal data as input value of function and what is random = false
function addMeal(mealData, random = false){

    //to check the meal data
    console.log(mealData);

    //we are creating a div there with the help of dom
    const meal = document.createElement("div");

    //we are adding class to element there i.e we are creating objects there to show
    meal.classList.add("meal");

    //from there we are trying to show the things on display
    meal.innerHTML = `
    <div class="meal-header">
        ${random ? `
        <span class="random">
        Random Recipe
        </span>` : ''}
        <img src="${mealData.strMealThumb}" alt="${mealData.strMeal}">
    </div>
    <div class="meal-body">
        <h4>${mealData.strMeal}</h4>
        <button class="fav-btn">
            <i class="fas fa-heart"></i>
        </button>
    </div>`

    //there we are working on the button click of fav button that heart one and if we click on meal to get it's recipe
    const btn = meal.querySelector('.meal-body .fav-btn');

    btn.addEventListener('click', () => {
        if(btn.classList.contains('active')){
            //if meal is already in the fav list then remove it by clicking on heart button
            removeMealLS(mealData.idMeal);
            btn.classList.remove("active");
        }
        //if meal is not already there then add it to favorite list
        else{
            addMealLS(mealData.idMeal);
            btn.classList.add("active");
        }


        fetchFavMeals();
    });

    //here if we click on the meal it will show the info
    meal.addEventListener('click', () => {
        showMealInfo(mealData);
    });

    mealsEl.appendChild(meal);
};

function addMealLS(mealId){
    const mealIds = getMealsLS();


    localStorage.setItem('mealIds', JSON.stringify([...mealIds, mealId]));
};

function removeMealLS(mealId){
    const mealIds = getMealsLS();

    //here to store data in local storage we are first creating string of it we can do so by using arrays also.
    localStorage.setItem('mealIds', JSON.stringify(mealIds.filter(id => id !== mealId)));
}

function getMealsLS(){
    //here we are coverting the data we are getting from local storage to object
    const mealIds = JSON.parse(localStorage.getItem('mealIds'));

    //ternary operator if avilable then show
    return mealIds === null ? [] : mealIds;
};

async function fetchFavMeals(){    

    favoriteContainer.innerHTML = "";

    const mealIds = getMealsLS();

    const meals =[];

    for(let i = 0; i<mealIds.length;i++){
        const mealId = mealIds[i];

        meal = await getMealById(mealId);

        addMealFav(meal);
    }

}

function addMealFav(mealData){


    const favMeal = document.createElement("li");

    favMeal.innerHTML = `
    <img src="${mealData.strMealThumb}" alt="${mealData.strMeal}"><span>${mealData.strMeal}</span>

    <button class = "clear"><i class = "fas fa-window-close"></button>
    `;

    const btn = favMeal.querySelector('.clear');

    btn.addEventListener("click", () => {
        removeMealLS(mealData.idMeal);

        fetchFavMeals();
    });

    favMeal.addEventListener('click', () => {
        showMealInfo(mealData);
    });

    favoriteContainer.appendChild(favMeal);
};

function showMealInfo(mealData){


    mealInfoEl.innerHTML = "";

    const mealEl = document.createElement("div");
    const ingredients = [];
    
    for(let i = 1;i <= 20;i++){
        if(mealData['strIngredient'+i]){
            ingredients.push(`${mealData["strIngredients" + i]}-${mealData["strMeasure" + i]}`)
        }
        else{
            break;
        }
    }

    mealEl.innerHTML = `
    <h1>${mealData.strMeal}</h1>
    <img src="${mealData.strMealThumb}" alt="${mealData.strMeal}">
    <p>${mealData.strInstructions}</p>
    <h3>Ingredients:</h3>
    <ul>${ingredients.map((ing) => `<li>${ing}</li>`).join("")}</ul>
    `;
    mealInfoEl.appendChild(mealEl);

    mealPopup.classList.remove("hidden")
    
}

searchBtn.addEventListener("click", async () =>{

    mealsEl.innerHTML = '';

    const search = searchTerm.value;

    const meals = await getMealsBySearch(search);

    if(meals){
        meals.forEach((meal) => {
            addMeal(meal);
        })
    }
});

popupCloseBtn.addEventListener('click', () =>{
    mealPopup.classList.add('hidden');
});
